{
  "address": "HKViZ7i7fEpfqcpCpDWAfmZpuVZ6WSRXST85nf1w227q",
  "metadata": {
    "name": "anchor_lending_example",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "deposit",
      "docs": [
        "Deposit tokens into a bank",
        "User must sign the transaction and provide token account with sufficient balance"
      ],
      "discriminator": [
        242,
        35,
        198,
        137,
        82,
        225,
        242,
        182
      ],
      "accounts": [
        {
          "name": "user",
          "docs": [
            "User's wallet that must sign"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "user_token_account",
          "docs": [
            "User's token account to deposit from"
          ],
          "writable": true
        },
        {
          "name": "bank_token_account",
          "docs": [
            "Bank's token account to deposit to"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  111,
                  107,
                  101,
                  110,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "bank"
              }
            ]
          }
        },
        {
          "name": "user_account",
          "docs": [
            "User account to update balance"
          ],
          "writable": true
        },
        {
          "name": "bank",
          "docs": [
            "Bank account to validate status"
          ],
          "writable": true
        },
        {
          "name": "token_program",
          "docs": [
            "Token program, either Token or Token2022"
          ]
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize",
      "docs": [
        "Initialize the lending program by creating an admin account",
        "The admin account will have authority over certain program functions"
      ],
      "discriminator": [
        175,
        175,
        109,
        31,
        13,
        152,
        155,
        237
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "The admin account to be initialized"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  100,
                  109,
                  105,
                  110
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "docs": [
            "The authority that will have admin privileges"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "initialize_bank",
      "docs": [
        "Initialize configuration for a new bank",
        "Can only be called by the admin authority"
      ],
      "discriminator": [
        217,
        55,
        77,
        45,
        245,
        197,
        75,
        140
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "The admin account"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  100,
                  109,
                  105,
                  110
                ]
              }
            ]
          }
        },
        {
          "name": "pool",
          "docs": [
            "The pool account"
          ],
          "writable": true
        },
        {
          "name": "bank",
          "docs": [
            "The bank account to initialize"
          ],
          "writable": true
        },
        {
          "name": "mint",
          "docs": [
            "The token mint"
          ]
        },
        {
          "name": "token_account",
          "docs": [
            "The token account owned by bank PDA"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  111,
                  107,
                  101,
                  110,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "bank"
              }
            ]
          }
        },
        {
          "name": "authority",
          "docs": [
            "The authority that must sign to initialize bank"
          ],
          "writable": true,
          "signer": true,
          "relations": [
            "admin"
          ]
        },
        {
          "name": "token_program",
          "docs": [
            "Token program"
          ]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "group_id",
          "type": "u8"
        }
      ]
    },
    {
      "name": "initialize_pool",
      "docs": [
        "Initialize a new pool",
        "Can only be called by the admin authority"
      ],
      "discriminator": [
        95,
        180,
        10,
        172,
        84,
        174,
        232,
        40
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "The admin account to be updated"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  100,
                  109,
                  105,
                  110
                ]
              }
            ]
          }
        },
        {
          "name": "pool",
          "docs": [
            "The pool account to initialize"
          ],
          "writable": true
        },
        {
          "name": "authority",
          "docs": [
            "The authority that must sign this transaction"
          ],
          "writable": true,
          "signer": true,
          "relations": [
            "admin"
          ]
        },
        {
          "name": "system_program",
          "docs": [
            "System program for CPI"
          ],
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": []
    },
    {
      "name": "initialize_user",
      "docs": [
        "Initialize a new user account with unique ID in a specific token group",
        "This creates a PDA account for the user that will hold their lending protocol state"
      ],
      "discriminator": [
        111,
        17,
        185,
        250,
        60,
        122,
        38,
        254
      ],
      "accounts": [
        {
          "name": "user",
          "docs": [
            "The new user account to be created"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  117,
                  115,
                  101,
                  114
                ]
              },
              {
                "kind": "arg",
                "path": "pool_id"
              },
              {
                "kind": "arg",
                "path": "user_id"
              },
              {
                "kind": "account",
                "path": "authority"
              }
            ]
          }
        },
        {
          "name": "authority",
          "docs": [
            "The authority (owner) of the user account"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "admin",
          "docs": [
            "The admin account for the protocol"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  100,
                  109,
                  105,
                  110
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "docs": [
            "System program for CPI"
          ],
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "pool_id",
          "type": "u8"
        },
        {
          "name": "user_id",
          "type": "u16"
        }
      ]
    },
    {
      "name": "update_authority",
      "docs": [
        "Update the admin authority to a new account",
        "Can only be called by the current authority"
      ],
      "discriminator": [
        32,
        46,
        64,
        28,
        149,
        75,
        243,
        88
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "The admin account to update"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  100,
                  109,
                  105,
                  110
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "docs": [
            "The current authority that must sign"
          ],
          "signer": true,
          "relations": [
            "admin"
          ]
        },
        {
          "name": "new_authority",
          "docs": [
            "The new authority to be set"
          ]
        }
      ],
      "args": []
    },
    {
      "name": "update_bank_status",
      "docs": [
        "Update the operational status of a bank",
        "Can only be called by the admin authority"
      ],
      "discriminator": [
        75,
        255,
        49,
        191,
        115,
        239,
        30,
        148
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "The admin account"
          ],
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  97,
                  100,
                  109,
                  105,
                  110
                ]
              }
            ]
          }
        },
        {
          "name": "authority",
          "docs": [
            "The authority that must sign"
          ],
          "signer": true,
          "relations": [
            "admin"
          ]
        },
        {
          "name": "bank",
          "docs": [
            "The bank account to update"
          ],
          "writable": true
        }
      ],
      "args": [
        {
          "name": "new_status",
          "type": "u8"
        }
      ]
    },
    {
      "name": "update_price",
      "docs": [
        "Update the price feed for a bank",
        "Can only be called by the admin authority"
      ],
      "discriminator": [
        61,
        34,
        117,
        155,
        75,
        34,
        123,
        208
      ],
      "accounts": [
        {
          "name": "admin",
          "docs": [
            "The admin account containing authority info"
          ]
        },
        {
          "name": "bank",
          "docs": [
            "The bank account to update price for"
          ],
          "writable": true
        },
        {
          "name": "authority",
          "docs": [
            "The authority that can update prices"
          ],
          "signer": true
        }
      ],
      "args": [
        {
          "name": "params",
          "type": {
            "defined": {
              "name": "UpdatePriceParams"
            }
          }
        }
      ]
    },
    {
      "name": "withdraw",
      "docs": [
        "Withdraw tokens from a bank",
        "User must sign the transaction and have sufficient balance in their user account"
      ],
      "discriminator": [
        183,
        18,
        70,
        156,
        148,
        109,
        161,
        34
      ],
      "accounts": [
        {
          "name": "user",
          "docs": [
            "User's wallet that must sign"
          ],
          "writable": true,
          "signer": true
        },
        {
          "name": "user_token_account",
          "docs": [
            "User's token account to withdraw to"
          ],
          "writable": true
        },
        {
          "name": "bank_token_account",
          "docs": [
            "Bank's token account to withdraw from"
          ],
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  116,
                  111,
                  107,
                  101,
                  110,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "bank"
              }
            ]
          }
        },
        {
          "name": "user_account",
          "docs": [
            "User account to update balance"
          ],
          "writable": true
        },
        {
          "name": "bank",
          "docs": [
            "Bank account to validate status and sign token transfer"
          ],
          "writable": true
        },
        {
          "name": "token_program",
          "docs": [
            "Token program, either Token or Token2022"
          ]
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Admin",
      "discriminator": [
        244,
        158,
        220,
        65,
        8,
        73,
        4,
        65
      ]
    },
    {
      "name": "Bank",
      "discriminator": [
        142,
        49,
        166,
        242,
        50,
        66,
        97,
        188
      ]
    },
    {
      "name": "Pool",
      "discriminator": [
        241,
        154,
        109,
        4,
        17,
        177,
        109,
        188
      ]
    },
    {
      "name": "User",
      "discriminator": [
        159,
        117,
        95,
        227,
        239,
        151,
        58,
        236
      ]
    }
  ],
  "events": [
    {
      "name": "AdminAuthorityUpdated",
      "discriminator": [
        123,
        175,
        81,
        239,
        14,
        93,
        204,
        151
      ]
    },
    {
      "name": "AdminInitialized",
      "discriminator": [
        237,
        223,
        71,
        11,
        140,
        218,
        196,
        171
      ]
    },
    {
      "name": "BankInitialized",
      "discriminator": [
        12,
        70,
        239,
        83,
        166,
        159,
        112,
        156
      ]
    },
    {
      "name": "BankStatusUpdated",
      "discriminator": [
        20,
        241,
        184,
        46,
        202,
        162,
        62,
        230
      ]
    },
    {
      "name": "CalculatedUserValue",
      "discriminator": [
        157,
        125,
        189,
        162,
        177,
        178,
        107,
        24
      ]
    },
    {
      "name": "PriceUpdateEvent",
      "discriminator": [
        176,
        152,
        211,
        252,
        92,
        105,
        194,
        103
      ]
    },
    {
      "name": "UserBalanceUpdated",
      "discriminator": [
        229,
        61,
        41,
        151,
        217,
        169,
        131,
        105
      ]
    },
    {
      "name": "UserInitialized",
      "discriminator": [
        66,
        195,
        5,
        223,
        42,
        84,
        135,
        60
      ]
    },
    {
      "name": "anchor_lending_example::protocol::event::PoolInitialized",
      "discriminator": [
        100,
        118,
        173,
        87,
        12,
        198,
        254,
        229
      ]
    },
    {
      "name": "anchor_lending_example::protocol::instructions::initialize_pool::PoolInitialized",
      "discriminator": [
        100,
        118,
        173,
        87,
        12,
        198,
        254,
        229
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "AlreadyInitialized",
      "msg": "User account already initialized"
    },
    {
      "code": 6001,
      "name": "InvalidAuthority",
      "msg": "Invalid authority provided"
    },
    {
      "code": 6002,
      "name": "BalanceUpdateOverflow",
      "msg": "Balance update overflow"
    },
    {
      "code": 6003,
      "name": "MaxTokenTypes",
      "msg": "Reach max token types in a single account, no extra token types can be insert, consider create a new account."
    },
    {
      "code": 6004,
      "name": "PoolNotFound",
      "msg": "Pool not found"
    },
    {
      "code": 6005,
      "name": "InvalidCollateralBalance",
      "msg": "Invalid collateral balance"
    }
  ],
  "types": [
    {
      "name": "Admin",
      "docs": [
        "Admin account data"
      ],
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "docs": [
              "The authority pubkey that has admin privileges"
            ],
            "type": "pubkey"
          },
          {
            "name": "pool_count",
            "docs": [
              "Number of pools that have been initialized"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "AdminAuthorityUpdated",
      "docs": [
        "Event emitted when admin authority is updated"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "docs": [
              "The admin account address"
            ],
            "type": "pubkey"
          },
          {
            "name": "old_authority",
            "docs": [
              "The old authority"
            ],
            "type": "pubkey"
          },
          {
            "name": "new_authority",
            "docs": [
              "The new authority"
            ],
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "AdminInitialized",
      "docs": [
        "Event emitted when admin is initialized"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "docs": [
              "The admin account address"
            ],
            "type": "pubkey"
          },
          {
            "name": "authority",
            "docs": [
              "The authority set for this admin"
            ],
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "BalanceType",
      "docs": [
        "Type of balance for a token position"
      ],
      "repr": {
        "kind": "rust"
      },
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Collateral"
          },
          {
            "name": "Liability"
          }
        ]
      }
    },
    {
      "name": "Bank",
      "docs": [
        "Bank account data"
      ],
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bank_id",
            "docs": [
              "The bank ID within the pool"
            ],
            "type": "u8"
          },
          {
            "name": "pool_id",
            "docs": [
              "The pool ID"
            ],
            "type": "u8"
          },
          {
            "name": "bump",
            "docs": [
              "The PDA bump seed"
            ],
            "type": "u8"
          },
          {
            "name": "status",
            "docs": [
              "Current operational status"
            ],
            "type": "u8"
          },
          {
            "name": "decimals",
            "docs": [
              "The decimal places of the token mint"
            ],
            "type": "u8"
          },
          {
            "name": "padding",
            "type": {
              "array": [
                "u8",
                3
              ]
            }
          },
          {
            "name": "mint",
            "docs": [
              "The token mint address"
            ],
            "type": "pubkey"
          },
          {
            "name": "price_message",
            "docs": [
              "The price message"
            ],
            "type": {
              "defined": {
                "name": "PriceFeedMessage"
              }
            }
          }
        ]
      }
    },
    {
      "name": "BankInitialized",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mint",
            "type": "pubkey"
          },
          {
            "name": "group_id",
            "type": "u8"
          },
          {
            "name": "status",
            "type": "u8"
          },
          {
            "name": "token_account",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "BankStatusUpdated",
      "docs": [
        "Event emitted when bank status is updated"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mint",
            "docs": [
              "The token mint address"
            ],
            "type": "pubkey"
          },
          {
            "name": "old_status",
            "docs": [
              "Previous bank status"
            ],
            "type": "u8"
          },
          {
            "name": "new_status",
            "docs": [
              "New bank status"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "CalculatedUserValue",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "collateral",
            "docs": [
              "Total collateral value in USD (6 decimals)"
            ],
            "type": "u128"
          },
          {
            "name": "liability",
            "docs": [
              "Total liability value in USD (6 decimals)"
            ],
            "type": "u128"
          },
          {
            "name": "net_value",
            "docs": [
              "Net value in USD (6 decimals)"
            ],
            "type": "u128"
          }
        ]
      }
    },
    {
      "name": "Pool",
      "docs": [
        "Pool account data"
      ],
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bank_count",
            "docs": [
              "Number of banks initialized in this pool"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "PriceFeedMessage",
      "docs": [
        "Message containing price feed data"
      ],
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "ema_price",
            "docs": [
              "Exponential moving average price"
            ],
            "type": "u64"
          },
          {
            "name": "ema_conf",
            "docs": [
              "EMA confidence interval"
            ],
            "type": "u64"
          },
          {
            "name": "price",
            "docs": [
              "Current price"
            ],
            "type": "u64"
          },
          {
            "name": "conf",
            "docs": [
              "Confidence interval around the price"
            ],
            "type": "u64"
          },
          {
            "name": "exponent",
            "docs": [
              "Price exponent"
            ],
            "type": "i32"
          },
          {
            "name": "padding",
            "type": "i32"
          },
          {
            "name": "publish_time",
            "docs": [
              "Timestamp of price update"
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PriceUpdateEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bank",
            "type": "pubkey"
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "conf",
            "type": "u64"
          },
          {
            "name": "ema_price",
            "type": "u64"
          },
          {
            "name": "ema_conf",
            "type": "u64"
          },
          {
            "name": "publish_time",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "TokenBalance",
      "docs": [
        "Represents a single token balance entry"
      ],
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "balance",
            "docs": [
              "Balance amount in token's native units",
              "Always positive - use balance_type to determine if liability"
            ],
            "type": "u64"
          },
          {
            "name": "bank_id",
            "docs": [
              "Bank identifier for the token"
            ],
            "type": "u8"
          },
          {
            "name": "balance_type",
            "docs": [
              "Type of balance (collateral or liability)"
            ],
            "type": "u8"
          },
          {
            "name": "padding",
            "docs": [
              "Padding for memory alignment"
            ],
            "type": {
              "array": [
                "u8",
                6
              ]
            }
          }
        ]
      }
    },
    {
      "name": "UpdatePriceParams",
      "docs": [
        "Parameters for updating price information"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "ema_price",
            "docs": [
              "Exponential moving average price"
            ],
            "type": "u64"
          },
          {
            "name": "ema_conf",
            "docs": [
              "EMA confidence interval"
            ],
            "type": "u64"
          },
          {
            "name": "price",
            "docs": [
              "Current price"
            ],
            "type": "u64"
          },
          {
            "name": "conf",
            "docs": [
              "Confidence interval around the price"
            ],
            "type": "u64"
          },
          {
            "name": "exponent",
            "docs": [
              "Price exponent"
            ],
            "type": "i32"
          },
          {
            "name": "publish_time",
            "docs": [
              "Timestamp of price update"
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "User",
      "docs": [
        "Represents a user account in the lending protocol"
      ],
      "serialization": "bytemuck",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "docs": [
              "The user's authority (usually their wallet address)"
            ],
            "type": "pubkey"
          },
          {
            "name": "id",
            "docs": [
              "Unique identifier for the user"
            ],
            "type": "u16"
          },
          {
            "name": "pool_id",
            "docs": [
              "Pool identifier"
            ],
            "type": "u8"
          },
          {
            "name": "bump",
            "docs": [
              "Bump seed for PDA validation"
            ],
            "type": "u8"
          },
          {
            "name": "padding",
            "docs": [
              "Padding for memory alignment"
            ],
            "type": {
              "array": [
                "u8",
                4
              ]
            }
          },
          {
            "name": "token_balances",
            "docs": [
              "Token balances stored as array of TokenBalance",
              "Maximum 16 different tokens per user"
            ],
            "type": {
              "array": [
                {
                  "defined": {
                    "name": "TokenBalance"
                  }
                },
                16
              ]
            }
          }
        ]
      }
    },
    {
      "name": "UserBalanceUpdated",
      "docs": [
        "Event emitted when a user's token balance is updated"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "user",
            "docs": [
              "The user account address"
            ],
            "type": "pubkey"
          },
          {
            "name": "token_id",
            "docs": [
              "Token ID"
            ],
            "type": "u8"
          },
          {
            "name": "previous_balance",
            "docs": [
              "Previous balance"
            ],
            "type": "u64"
          },
          {
            "name": "previous_asset_type",
            "docs": [
              "Previous asset type (Collateral/Liability)"
            ],
            "type": {
              "defined": {
                "name": "BalanceType"
              }
            }
          },
          {
            "name": "new_balance",
            "docs": [
              "New balance"
            ],
            "type": "u64"
          },
          {
            "name": "new_asset_type",
            "docs": [
              "New asset type (Collateral/Liability)"
            ],
            "type": {
              "defined": {
                "name": "BalanceType"
              }
            }
          },
          {
            "name": "timestamp",
            "docs": [
              "Timestamp of the update"
            ],
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "UserInitialized",
      "docs": [
        "Event emitted when a new user account is initialized"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "user",
            "docs": [
              "The user account address"
            ],
            "type": "pubkey"
          },
          {
            "name": "authority",
            "docs": [
              "The user's authority"
            ],
            "type": "pubkey"
          },
          {
            "name": "user_id",
            "docs": [
              "The user's ID"
            ],
            "type": "u16"
          },
          {
            "name": "pool_id",
            "docs": [
              "Pool ID"
            ],
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "anchor_lending_example::protocol::event::PoolInitialized",
      "docs": [
        "Event emitted when a new pool is initialized"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pool_id",
            "docs": [
              "The pool ID that was initialized"
            ],
            "type": "u8"
          },
          {
            "name": "authority",
            "docs": [
              "The authority that initialized it"
            ],
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "anchor_lending_example::protocol::instructions::initialize_pool::PoolInitialized",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "pool_count",
            "type": "u8"
          },
          {
            "name": "pool_id",
            "type": "u8"
          }
        ]
      }
    }
  ]
}